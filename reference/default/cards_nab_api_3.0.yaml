openapi: 3.0.1
info:
  title: Vision10 API Documentation
  description: V10 open API document.
  version: 1.0.0
servers:
- url: http://204.105.107.65:24500/fva_apac/
paths:    
  /v1/cards/activate: 
    put:
      tags:
      - Card Management
      x-group-name: Card Management
      x-proxy-name: Activate Card
      summary: Activate Card
      description: This service is used to activate the card after successful verification of the cardholder.
      operationId: Card Activate
      parameters: 
      - name: X-Correl-Id
        in: header
        description: Any correlational text client's may want to send in the request for mapping the response on their side. Any value passed in the request message will be return back as-is in the API response message
        schema:
          maxLength: 40
          minLength: 0
          type: string
          example: EXC-ID-12345678-SUB
      - name: X-Name
        in: header
        required: true
        description: User’s sign-on name. The value passed in this field will be validated within application for user's authority to consume the requested API
        schema:
          maxLength: 30
          minLength: 0
          type: string
          example: John Smith
      - name: X-context
        in: header
        required: true
        description: A unique random ID assigned to the requestor once authenticated to the First Vision application. Value passed in this field will be used within application to authenticate the valid signed-on user
        schema:
          maxLength: 20
          minLength: 0
          type: string
          example: 00001AUVMX
      
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCardActivateReq'
            examples:
              ActivateCard: { $ref: '#/components/examples/CardActivateReq'}
              
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCardActivateResp'
              examples: 
                ActivateCard: {$ref: '#/components/examples/CardActivateResp'}

        400:
          description: The request cannot be validated
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorList'}
              example:
               - '400':
                    $ref: '#/components/examples/400-Errors'
        401:
          description: The request was unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
              example:
                - '401':
                    $ref: '#/components/examples/401-Errors'
        404:
          description: The request resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
              example:
               - '404':
                    $ref: '#/components/examples/404-Errors'
        500:
          description: An unexpected internal server error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
              example:
               - '500':
                   $ref: '#/components/examples/500-Errors'
        503:
          description: The service was unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
              example:
               - '503':
                    $ref: '#/components/examples/503-Errors'
        504:
          description: The request timed out while waiting for a response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
              example:
               - '504':
                    $ref: '#/components/examples/504-Errors'
  
  /v1/cards/blockUnblock:
    patch:
      tags:
      - Card Management
      x-group-name: Card Management
      x-proxy-name: Block-Unblock Card
      summary: Block-Unblock Card
      description: This service is used to update the block codes and the reason codes for the block codes for cards and accounts. Same service can be used to unblock the card by passing spaces in the block-code field of the request body.
      operationId: cardsBlock
      parameters:
      - name: X-Correl-Id
        in: header
        description: Any correlational text client's may want to send in the request for mapping the response on their side. Any value passed in the request message will be return back as-is in the API response message
        schema:
          maxLength: 40
          minLength: 0
          type: string
          example: EXC-ID-12345678-SUB
      - name: X-Name
        in: header
        required: true
        description: User’s sign-on name. The value passed in this field will be validated within application for user's authority to consume the requested API
        schema:
          maxLength: 30
          minLength: 0
          type: string
          example: John Smith
      - name: X-context
        in: header
        required: true
        description: A unique random ID assigned to the requestor once authenticated to the First Vision application. Value passed in this field will be used within application to authenticate the valid signed-on user
        schema:
          maxLength: 20
          minLength: 0
          type: string
          example: 00001AUVMX
          
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardsBlockUnblockReq'
            examples: 
              BlockCard: {$ref: '#/components/examples/BlockCardReq'}
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardsBlockUnblockResp'
              examples:
                BlockCard: {$ref: '#/components/examples/BlockCardResp'}
        400:
          description: The request cannot be validated
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorList'}
              example:
               - '400':
                    $ref: '#/components/examples/400-Errors'
        401:
          description: The request was unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
              example:
               - '401':
                    $ref: '#/components/examples/401-Errors'
        404:
          description: The request resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
              example:
               - '404':
                    $ref: '#/components/examples/404-Errors'
        500:
          description: An unexpected internal server error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
              example:
               - '500':
                    $ref: '#/components/examples/500-Errors'
        503:
          description: The service was unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
              example:
               - '503':
                    $ref: '#/components/examples/503-Errors'
        504:
          description: The request timed out while waiting for a response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
              example:
               - '504':
                    $ref: '#/components/examples/504-Errors'
  
  /v1/cards/transfer:
    put:
      tags:
      - Card Management
      x-group-name: Card Management
      x-proxy-name: Lost Stolen Card Transfer
      summary: Lost Stolen Card Transfer
      description: This Lost or Stolen service is used to block the lost card and request for the replacement card.
      operationId: cardTransfer
      parameters:
      - name: X-Correl-Id
        in: header
        description: Any correlational text client's may want to send in the request for mapping the response on their side. Any value passed in the request message will be return back as-is in the API response message
        schema:
          maxLength: 40
          minLength: 0
          type: string
          example: EXC-ID-12345678-SUB
      - name: X-Name
        in: header
        required: true
        description: User’s sign-on name. The value passed in this field will be validated within application for user's authority to consume the requested API
        schema:
          maxLength: 30
          minLength: 0
          type: string
          example: John Smith
      - name: X-context
        in: header
        required: true
        description: A unique random ID assigned to the requestor once authenticated to the First Vision application. Value passed in this field will be used within application to authenticate the valid signed-on user
        schema:
          maxLength: 20
          minLength: 0
          type: string
          example: 00001AUVMX
          
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCardTransferReq'
            examples:
              CardTransfer: { $ref: '#/components/examples/CardTransferReq'}
           
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCardTransferResp'
              examples:
                CardTransfer: { $ref: '#/components/examples/CardTransferResp'}
                
        400:
          description: The request cannot be validated
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorList'}
              example:
               - '400':
                    $ref: '#/components/examples/400-Errors'
        401:
          description: The request was unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
              example:
               - '401':
                    $ref: '#/components/examples/401-Errors'
        404:
          description: The request resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
              example:
               - '404':
                    $ref: '#/components/examples/404-Errors'
        500:
          description: An unexpected internal server error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
              example:
               - '500':
                    $ref: '#/components/examples/500-Errors'
        503:
          description: The service was unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
              example:
               - '503':
                    $ref: '#/components/examples/503-Errors'
        504:
          description: The request timed out while waiting for a response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
              example:
               - '504':
                    $ref: '#/components/examples/504-Errors'                  
  
  /v1/cards/profile:
    patch:
      tags:
      - Card Management
      x-group-name: Card Management
      x-proxy-name: CardType Update
      summary: CardType Update
      description: This service is used to update the type of cardholder between primary and supplementary (Joint Cardholder).
      operationId: cardsProfile
      parameters:
      - name: X-Correl-Id
        in: header
        description: Any correlational text client's may want to send in the request for mapping the response on their side. Any value passed in the request message will be return back as-is in the API response message
        schema:
          maxLength: 40
          minLength: 0
          type: string
          example: EXC-ID-12345678-SUB
      - name: X-Name
        in: header
        required: true
        description: User’s sign-on name. The value passed in this field will be validated within application for user's authority to consume the requested API
        schema:
          maxLength: 30
          minLength: 0
          type: string
          example: John Smith
      - name: X-context
        in: header
        required: true
        description: A unique random ID assigned to the requestor once authenticated to the First Vision application. Value passed in this field will be used within application to authenticate the valid signed-on user
        schema:
          maxLength: 20
          minLength: 0
          type: string
          example: 00001AUVMX
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCardProfileReq'
            examples: 
              CardsProfile: { $ref: '#/components/examples/CardProfileReq' }
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCardsProfileResp'
              examples: 
                CardsProfile: { $ref: '#/components/examples/CardsProfileResp'}
        400:
          description: The request cannot be validated
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorList'}
              example:
               - '400':
                    $ref: '#/components/examples/400-Errors'
        401:
          description: The request was unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
              example:
               - '401':
                    $ref: '#/components/examples/401-Errors'
        404:
          description: The request resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
              example:
               - '404':
                    $ref: '#/components/examples/404-Errors'
        500:
          description: An unexpected internal server error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
              example:
               - '500':
                    $ref: '#/components/examples/500-Errors'
        503:
          description: The service was unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
              example:
               - '503':
                    $ref: '#/components/examples/503-Errors'
        504:
          description: The request timed out while waiting for a response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
              example:
               - '504':
                    $ref: '#/components/examples/504-Errors'
  
  /v1/cards/secureCode:
    post:
      tags:
      - Card Management
      x-group-name: Card Management
      x-proxy-name: CVV2 Validation
      summary: CVV2 Validation
      description: The Card Secure Code Validation service is used to validate the CVV2 and optionally the expiry date of a given card.     This service is typically called before the card activation or PIN reset service to validate the cardholder.
      operationId: secureCode
      parameters:
      - name: X-Correl-Id
        in: header
        description: Any correlational text client's may want to send in the request for mapping the response on their side. Any value passed in the request message will be return back as-is in the API response message
        schema:
          maxLength: 40
          minLength: 0
          type: string
          example: EXC-ID-12345678-SUB
      - name: X-Name
        in: header
        required: true
        description: User’s sign-on name. The value passed in this field will be validated within application for user's authority to consume the requested API
        schema:
          maxLength: 30
          minLength: 0
          type: string
          example: John Smith
      - name: X-context
        in: header
        required: true
        description: A unique random ID assigned to the requestor once authenticated to the First Vision application. Value passed in this field will be used within application to authenticate the valid signed-on user
        schema:
          maxLength: 20
          minLength: 0
          type: string
          example: 00001AUVMX
          
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardsSecureCodeReq'
            examples:
              CardsSecure: { $ref: '#/components/examples/CardSecureReq' }

      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardsSecureCodeResp'
              examples: 
                CardsSecure: { $ref: '#/components/examples/CardSecureResp' }
        400:
          description: The request cannot be validated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
              example:
               - '400':
                    $ref: '#/components/examples/400-Errors'
        401:
          description: The request was unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
              example:
               - '401':
                    $ref: '#/components/examples/401-Errors'
        404:
          description: The request resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
              example:
               - '401':
                    $ref: '#/components/examples/404-Errors'
        500:
          description: An unexpected internal server error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
              example:
               - '500':
                    $ref: '#/components/examples/500-Errors'
        503:
          description: The service was unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
              example:
               - '503':
                    $ref: '#/components/examples/503-Errors'
        504:
          description: The request timed out while waiting for a response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
              example:
               - '504':
                    $ref: '#/components/examples/504-Errors'
  
  /v1/cards/spendLimits:
    patch:
      tags:
      -  Card Management
      x-group-name: Card Management
      x-proxy-name: Spend Limit Updates
      summary: Spend Limit Updates
      description: This service is used to update the spending limits to control the card usage. These limits are set at individual card level.
      operationId: Card Limits
      parameters:
      - name: X-Correl-Id
        in: header
        description: Any correlational text client's may want to send in the request for mapping the response on their side. Any value passed in the request message will be return back as-is in the API response message
        schema:
          maxLength: 40
          minLength: 0
          type: string
          example: EXC-ID-12345678-SUB
      - name: X-Name
        in: header
        required: true
        description: User’s sign-on name. The value passed in this field will be validated within application for user's authority to consume the requested API
        schema:
          maxLength: 30
          minLength: 0
          type: string
          example: John Smith
      - name: X-context
        in: header
        required: true
        description: A unique random ID assigned to the requestor once authenticated to the First Vision application. Value passed in this field will be used within application to authenticate the valid signed-on user
        schema:
          maxLength: 20
          minLength: 0
          type: string
          example: 00001AUVMX
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCardLimitReq'
            #examples:
              #CardsLimit: { $ref: '#/components/examples/CardLimitReq' }
                          
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCardLimitResp'
              #examples: 
                #CardsLimit: { $ref: '#/components/examples/CardLimitResp' }
        400:
          description: The request cannot be validated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
              example:
               - '400':
                    $ref: '#/components/examples/400-Errors'
        401:
          description: The request was unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
              example:
               - '401':
                    $ref: '#/components/examples/401-Errors'
        404:
          description: The request resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
              example:
               - '401':
                    $ref: '#/components/examples/404-Errors'
        500:
          description: An unexpected internal server error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
              example:
               - '500':
                    $ref: '#/components/examples/500-Errors'
        503:
          description: The service was unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
              example:
               - '503':
                    $ref: '#/components/examples/503-Errors'
        504:
          description: The request timed out while waiting for a response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
              example:
               - '504':
                    $ref: '#/components/examples/504-Errors'
  
  /v1/cards/clearPan:
    get:
      tags:
      - Card Management
      x-group-name: Card Management
      x-proxy-name: Fetch Clear PAN from Token
      summary: Fetch Clear PAN from Token
      description: This service is used to fetch the clear pan for the requested First Vision's Token PAN.
      operationId: cardClearPan
      parameters:
      - name: X-Correl-Id
        in: header
        description: Any correlational text client's may want to send in the request for mapping the response on their side. Any value passed in the request message will be return back as-is in the API response message
        schema:
          maxLength: 40
          minLength: 0
          type: string
          example: EXC-ID-12345678-SUB
      - name: X-Name
        in: header
        required: true
        description: User’s sign-on name. The value passed in this field will be validated within application for user's authority to consume the requested API
        schema:
          maxLength: 30
          minLength: 0
          type: string
          example: John Smith
      - name: X-context
        in: header
        required: true
        description: A unique random ID assigned to the requestor once authenticated to the First Vision application. Value passed in this field will be used within application to authenticate the valid signed-on user
        schema:
          maxLength: 20
          minLength: 0
          type: string
          example: 00001AUVMX
      - name: indicator
        in: query
        example: 'Y'
        description: Indicator - Value 'Y' should be passed
        required: true
        schema:
          maxLength: 1
          type: string
          format: uppercase
      - name: businessUnit
        in: query
        example: 100
        description: Business Unit Identification number of the organization associated with thisAccount Base Segment record,The values are 001–998
        required: true
        schema:
          maximum: 998.0
          minimum: 0.0
          type: number
          default: 0.0
      - name: cardNumber
        in: query
        example: '000984680CCCCC73605'
        description: Token PAN - 19 digit Tokenized PAN number
        required: true
        schema:
          maxLength: 19
          type: string
          format: uppercase

      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cardsClearResponse'
              examples: 
                CardsClear: { $ref: '#/components/examples/CardClearResp' }
              
        400:
          description: The request cannot be validated
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorList'}
              example:
               - '400':
                    $ref: '#/components/examples/400-Errors'
        401:
          description: The request was unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
              example:
               - '401':
                    $ref: '#/components/examples/401-Errors'
        404:
          description: The request resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
              example:
               - '404':
                    $ref: '#/components/examples/404-Errors'
        500:
          description: An unexpected internal server error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
              example:
               - '500':
                    $ref: '#/components/examples/500-Errors'
        503:
          description: The service was unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
              example:
               - '503':
                    $ref: '#/components/examples/503-Errors'
        504:
          description: The request timed out while waiting for a response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
              example:
               - '504':
                    $ref: '#/components/examples/504-Errors'      
                  
  /v1/cards/pinBlock:
    patch:
      tags:
      - Card Management
      x-group-name: Card Management
      x-proxy-name: PIN Block Change
      summary: PIN Block Change
      description: The PIN Block Change Service is used to update the PIN Block with the prerequisite that the existing PIN block must be supplied and validated.
      operationId: pinBlock
      parameters:
      - name: X-Correl-Id
        in: header
        description: Any correlational text client's may want to send in the request for mapping the response on their side. Any value passed in the request message will be return back as-is in the API response message
        schema:
          maxLength: 40
          minLength: 0
          type: string
          example: EXC-ID-12345678-SUB
      - name: X-Name
        in: header
        required: true
        description: User’s sign-on name. The value passed in this field will be validated within application for user's authority to consume the requested API
        schema:
          maxLength: 30
          minLength: 0
          type: string
          example: John Smith
      - name: X-context
        in: header
        required: true
        description: A unique random ID assigned to the requestor once authenticated to the First Vision application. Value passed in this field will be used within application to authenticate the valid signed-on user
        schema:
          maxLength: 20
          minLength: 0
          type: string
          example: 00001AUVMX
          
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCardPinReq'
            examples: 
              CardsPin: { $ref: '#/components/examples/CardPinReq' }
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCardPinResp'
              examples: 
                CardsPin: { $ref: '#/components/examples/CardPinResp' }
        400:
          description: The request cannot be validated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
              example:
               - '400':
                    $ref: '#/components/examples/400-Errors'
        401:
          description: The request was unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
              example:
               - '401':
                    $ref: '#/components/examples/401-Errors'
        404:
          description: The request resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
              example:
               - '401':
                    $ref: '#/components/examples/404-Errors'
        500:
          description: An unexpected internal server error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
              example:
               - '500':
                    $ref: '#/components/examples/500-Errors'
        503:
          description: The service was unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
              example:
               - '503':
                    $ref: '#/components/examples/503-Errors'
        504:
          description: The request timed out while waiting for a response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
              example:
               - '504':
                    $ref: '#/components/examples/504-Errors'
                
components:
  schemas:
    CardsSecureCodeReq:
      required:
      - businessUnit
      - cVV2
      - cardNumber
      type: object
      properties:
        businessUnit:
          maximum: 999
          minimum: 0
          type: number
          example: 100
          description: Business Unit -Identification number of the organization associated
            with thisAccount Base Segment record. The values are 001–998.
        cardNumber:
          maxLength: 19
          type: string
          example: '0009846801CCCCC5787'
          description: Card Number -Number that is embossed on the plastic card. Enter a value inthis field only if the card number is different from the post-toaccount number
          format: uppercase    
        cVV2:
          maxLength: 3
          type: string
          example: '777'
          description: CVV2-valid CVV2 should be entered printed on the card
          format: uppercase
        expiryDateMMYY:
          maxLength: 4
          type: string
          example: '1122'
          description: Expire Date-valid card expire date should be provided which is of 4 character with MMYY format
          format: uppercase
        signonName:
          type: string
          example: ' ' 
          description: Signon name
        securitySignon:
          type: string
          example: ' '
          description: Security signon
        
    CardsClearReq:
      required:
      - indicator
      - businessUnit
      - cardNumber
      type: object
      properties:
        cardNumber:
          type: string
          description: Clear Pan - 19 digit Clear card number
          format: uppercase
        indicator:
          type: string
          description: Indicator - Value 'Y' should be passed
        businessUnit:
          type: number
          description: 'Business Unit: Identification number of the organization associated
          with thisAccount Base Segment record,The values are 001–998'
    cardsClearResponse:
      type: object
      properties:
        cardNumber:
          type: string
          example: '000404940CCCCC74818'
          description: Clear Pan - 19 digit Clear card number
          format: uppercase
    UpdateCardActivateReq:
      required:
      - businessUnit
      - postToAccountNumber
      - cardNumber
      - cardSequence
      type: object
      properties:
        businessUnit:
          type: number
          example: 100
          description: 'Business Unit: Identification number of the organization associated
          with thisAccount Base Segment record,The values are 001–998'
        cardNumber:
          type: string
          example: '000984680CCCCC73613'
          description: Clear Pan - 19 digit Clear card number
          format: uppercase
        cardSequence:
          type: number
          example: 0001
          description: Card sequence- This a static value value 0001 should be passed
        postToAccountNumber:
          type: string
          example: ' '
          description: Post to account number-Identification number of the Account BaseSegment record towhich CMS posts transactio received for this Embosser record
        currentCardRequireActivation:
          type: string
          example: 'Y'
          enum:
           - 'Y'
           - 'N'
          description: Current activation flag-Indicates whether cardactivation needs to occur for the most recently issued card values are N=No card activation is required or cardactivation has already occurred, Y=Card activation needs to occur
        cardActivatedDate: 
          type: string
          example: ' '
          description: Card activated date- This date will identifies the card activated date, this is a system generated date this will be changed
        lastCardActivation:
          type: string
          example: ' '
          description: Last card activation flag-indicates whether cardactivation needs to occur for the previously issuedcard values are N=No card activation is required or cardactivation has already occurred, Y=Card activation needs to occur   
    UpdateCardActivateResp:
      required:
      - businessUnit
      - postToAccountNumber
      - cardNumber
      - cardSequence
      type: object
      properties:
        businessUnit:
          type: number
          example: 100
          description: 'Business Unit: Identification number of the organization associated
          with thisAccount Base Segment record,The values are 001–998'
        cardSequence:
          type: number
          example: 1
          description: Card sequence- This a static value value 0001 should be passed
        postToAccountNumber:
          type: string
          example: '00010000CCCCC510760'
          description: Post to account number-Identification number of the Account Base Segment record towhich CMS posts transactions  received for this Embosser record
          maxLength: 19
        cardNumber:
          type: string
          example: '00098468CCCCC273613'
          description: CARD NUMBER-Number that is embossed on the plastic card. Enter a value inthis field only if the card number is different from the post-toaccount number
          maxLength: 19
        currentCardRequireActivation:
          type: string
          example: 'N'
          enum:
           - 'Y'
           - 'N'
          description: Current activation flag-Indicates whether cardactivation needs to occur for the most recently issued card values are N=No card activation is required or cardactivation has already occurred, Y=Card activation needs to occur
        cardActivatedDate: 
          type: string
          example: '01/10/2021'
          description: Card activated date- This date will identifies the card activated date, this is a system generated date this will be changed
        lastCardActivation:
          type: string
          example: 'Y'
          description: Last card activation flag-indicates whether cardactivation needs to occur for the previously issuedcard values are N=No card activation is required or cardactivation has already occurred, Y=Card activation needs to occur

    ErrorList:
      type: array
      items:
        type: object
        properties:
          errorCode:
            type: string
            example:  XXXXXXXX
            description: Error code associated with the response
          errorMessage:
            type: string
            example: Some message from the service
            description: Error message associated with the response
            
    UpdateCardTransferResp:
      required:
      - cardNumber
      type: object
      properties:
        blockCode:
          type: string
          example: 'L'
          description: Block Code- Block code of OLD card or fraud card this can be any value from A TO Z
          format: uppercase
        errorDescription:
          type: string
          example: ' '
          description: Error description
        errorType:
          type: string
          example: ' '
          description: Error Type
        serviceReturnCode:
          type: string
          example: ' '
          description: Service Return Code- This is specific to API return code the values are P AND F
        transactionReturnCode:
          type: string
          example: ' '
          description: Transaction return code
        errorCode:
          type: string
          example: ' '
          description: Error code
        maskCardnumber:
          type: string
          example: '000404940XXXXXX4481'
          description: Mask Pan Number- The clear card number will be masked with XXXX from 9 didgit to 15th didgit
          format: uppercase
        numberOfErrors:
          type: string
          example: '0'
          description: Number of errors- This will displays the number of errors in the service This is an occur cause which can store maxmum 20 erros
        transferToAccount:
          type: string
          example: '000100001NNNNNN3777'
          description: Transfer To Account- The account asscoicated to the old card
          format: uppercase
        transferToCustomer:
          type: string
          example: '984100001NNNNNN3777'
          description: Transfer To Customer-The customer asscoicated to the old card
          format: uppercase
        applicationReturnCode:
          type: string
          example: ' '
          description: Application Return code
        systemReturnCode:
          type: string
          example: ' '
          description: System retrun code
        cardNumber:
          type: string
          example: '000984680NNNNNN0089'
          description: New  card number- The new generated card number
          format: uppercase
        effectiveDate:
          type: string
          example: "10/01/2021"
          description: Effective Date-Date that the fraud card transfer is effective
          format: date
        transferFromAccount:
          type: string
          example: '000100001NNNNNN3777'
          description: Transfer From Account- The account asscoicated to the old card
          format: uppercase
    CardsSecureCodeResp:
      required:
      - cardNumber
      type: object
      properties:
        cardNumber:
          type: string
          example: '0009846CCCCCC065787'
          description: Card Number -Number that is embossed on the plastic card. Enter a value inthis field only if the card number is different from the post-toaccount number
          format: uppercase
    UpdateCardProfileReq:
      required:
      - businessUnit
      - cardNumber
      - cardSequence
      - postToAccountNumber
      type: object
      properties:
        businessUnit:
          type: number
          example: 100
          description: Business Unit -Identification number of the organization associated
            with thisAccount Base Segment record. The values are 001–998.
        cardSequence:
          type: number
          example: 0001
          description: Card sequence- This a static value value 0001 should be passed
        postToAccountNumber:
          maxLength: 19
          type: string
          example: ' '
          description: Post to account number-Identification number of the Account Base Segment record towhich CMS posts transactions received for this Embosser record
          format: uppercase
        cardNumber:
          maxLength: 19
          type: string
          example: ' '
          description: CARD NUMBER-Number that is embossed on the plastic card. Enter a value inthis field only if the card number is different from the post-toaccount number
          format: uppercase
        cardHolderType:
          type: string
          example: 'L'
          description: Cardholder Type-Code that indicates whether the cardholder is the primarycardholder or an additional cardholder associated with theaccount. The value for this field is set in the card-adding processwith the first cardholder designated as the primary cardholderand the other cardholders as additional cardholders. The values are 0 =Additional cardholder 1=Primary cardholder.
  
    UpdateCardsProfileResp:
      required:
      - businessUnit
      - cardNumber
      - cardSequence
      - postToAccountNumber
      type: object
      properties:
        cardholderType:
          type: string
          example: '1'
          description: Cardholder Type-Code that indicates whether the cardholder is the primarycardholder or an additional cardholder associated with theaccount. The value for this field is set in the card-adding processwith the first cardholder designated as the primary cardholderand the other cardholders as additional cardholders. The values are 0 =Additional cardholder 1=Primary
            cardholder
          enum:
          - '0' 
          - '1' 
        businessUnit:
          type: number
          example: 100
          description: Business Unit -Identification number of the organization associated with thisAccount Base Segment record. The values are 001–998.
        cardSequence:
          type: number
          example: 1
          description: Card sequence- This a static value value 0001 should be passed
        postToAccountNumber:
          maxLength: 19
          type: string
          example: '000100001NNNNN0760'
          description: Post to account number-Identification number of the Account Base Segment record towhich CMS posts transactions received for this Embosser record
          format: uppercase
        cardNumber:
          maxLength: 19
          type: string
          example: '000984680NNNNN73613'
          description: CARD NUMBER-Number that is embossed on the plastic card. Enter a value inthis field only if the card number is different from the post-toaccount number
          format: uppercase
    UpdateCardPinReq:
      required:
      - businessUnit
      - requestedPinBlock
      - cardNumber
      type: object
      properties:
        businessUnit:
          type: number
          example: 200
          description: Business Unit -Identification number of the organization associated with thisAccount Base Segment record. The values are 001–998.
        product:
          type: number
          example: 100
          description: Product - Product associated with this Account. The values are 001–998
        cardNumber:
          type: string
          maxLength: 19
          example: '000954349CCCCCC0172'
          description: Card Number-if the service is sucessiful, the response the updated card number will be send this will
          format: uppercase
        requestedPinBlock:
          type: string
          maxLength: 16
          example: 'CCCCC5DFB742A878'
          description: Requested pin block(New pin block)-The new pin block should be provided, This will be new pin Enter by customer
        currentPinBlock:
          type: string
          maxLength: 16
          format: uppercase
          example: ' '
          description: Current pin block( Old Pin Block)- The old pin block should be provided, This will be old pin Enter by customer
        pinOffSet:
          type: number
          example: 0
          description: Current pin block( Old Pin Block)- The old pin block should be provided, This will be old pin Enter by customer
        pinChannel:
          type: string
          example: 'W'
          description: Pin channel-This field will identifiy the channel through which The request has been ititialted The valid values are A-ATM,I-IVR, W-WEB
        keyAssociation:
          type: string
          example: ' '
          description: Key association-The value will be used to read the keys stored in KMS files,from input we always recive spaces
        securitySignon:
          type: string
          example: ' '
          description: Security signon-valid signon id should be provided
        signOnName:
          type: string
          example: ' '
          description: Signon name- valid signin name should be provided
        vgsFiller:
          type: string
          example: ' '
          description: Vgs filler- This is filler used for future purpose
        userFiller:
          type: string
          example: ' '
          description: User filler-This is filler used for future purpose
    
    UpdateCardPinResp:
      type: object
      properties:
        userFiller:
          type: string
          example: ' '
          description: User filler-This is filler used for future purpose
        filler:
          type: string
          example: ' '
          description: Vgs filler- This is filler used for future purpose
        cardNumber:
          type: string
          example: '0009543CCCCCCC80172'
          description: Card Number-if the service is sucessiful, the response the updated card number will be send this will
          format: uppercase
    UpdateCardTransferReq:
      required:
      - accountNumber
      - action
      - blockCode
      - cardNumber
      - cardReplacementIndicator
      - cardSequenceNumber
      - effectiveDate
      - operatorId
      - product
      - startDate
      - terminalId
      - transferToAccount
      - transferToCustomer
      type: object
      properties:
        businessUnit:
          maximum: 999
          minimum: 0
          type: number
          example: 100
          description: Business Unit -Identification number of the organization associated
            with thisAccount Base Segment record. The values are 001–998.
        accountNumber:
          maxLength: 19
          type: string
          example: '000100001NNNNNN3777'
          description: Account number-Account currently associated with the card
          format: uppercase  
        product:
          maximum: 999
          minimum: 0
          type: number
          example: 1
          description: Product - Product associated with this Account. The values
            are 001–998
        blockCode:
          maxLength: 1
          type: string
          example: 'L'
          description: Block code-Block code to apply to the transfer cardThe values
            are blank(or space) and A to Z
          format: uppercase
        cardReplacementIndicator:
          type: string
          example: '0'
          description: Card replacement indicator-Code that indicates whether CMS replaces the transfer card bygenerating a new Embosser record on the original account. The values are 0=Replace lost/stolen/fraud card (Default), 1=Do not replace lost/stolen/fraud card
          enum:
          - '0'
          - '1'
        terminalId:
          maxLength: 4
          type: string
          example: ' '
          description: Terminal id- The terminal from where the service was called
          format: uppercase
        customerBusinessUnit:
          maximum: 999
          minimum: 0
          type: number
          example: 100
          description: Card transfer org-Identification number of the organization
            associated with thisAccount Base Segment record. The values are 001–9
        transferToAccount:
          maxLength: 19
          type: string
          example: ' '
          description: Transfer to account-Number of the account to which you want
            to transfer the cardYou can enter a specific account number or enter a
            slash (/) ifthe auto-generation functionality is active for account numbers.
          format: uppercase
        transferToCustomer:
          maxLength: 19
          type: string
          example: ' '
          description: Transfer to customer-Number that identifies the Customer Name/Address recordassociated with the transfer-to accountIf you are transferring the card to an existing accountdo notmake an entry in the CUSTOMER fieldCMS uses the customernumber associated with the existing account
          format: uppercase
        signonName:
          type: string
          example: ' '
          description: signon name
        action:
          type: string
          example: 'T'
          description: Action-This field issystem-generated; you cannot modify it.
            The values are R=Reverse a card transfer, T=Transfer the card (lost, stolen,
            or fraud).
          enum:
          - 'T'
          - 'R'
        securitySignon:
          type: string
          description: security signon
          example: ' '
        operatorId:
          maxLength: 3
          type: string
          example: ' '
          description: Operator id-user signon operator id
          format: uppercase
        cardNumber:
          maxLength: 19
          type: string
          example: '000984680NNNNNN1264'
          description: CARD NUMBER-Number that is embossed on the plastic card. Enter a value inthis field only if the card number is different from the post-to account number
          format: uppercase
        effectiveDate:
          type: string
          example: ' '
          description: Effective date-Date that the fraud card transfer is effective
            The value must be a date less than or equal to today’sdateThe default
            value is today’s date. If you enter a future date The system will abend
          format: date
        cardSequenceNumber:
          maximum: 9999
          minimum: 1
          type: number
          example: 0001
          description: Card sequence- This a static value value 0001 should be passed
        startDate:
          type: string
          example: ' '
          description: Start date- the date when the serivce was called
          format: date
    CardsBlockUnblockReq:
      required:
      - businessUnit
      - cardNumber
      - cardSequence
      - postToAccountNumber
      type: object
      properties:
        businessUnit:
          type: number
          example: 100
          description: Business Unit -Identification number of the organization associated
            with thisAccount Base Segment record. The values are 001–998.
        cardSequence:
          type: number
          example: 0001
          description: Card sequence- This a static value value 0001 shouldbe passed
        postToAccountNumber:
          maxLength: 19
          type: string
          example: ABCDEFGHIJABCDEFGHI
          description: Post to account number-Identification number of the Account
            Base Segment record towhich CMS posts transactions received for this Embosser
            record
          format: uppercase
        cardNumber:
          maxLength: 19
          type: string
          example: 000984CCCCC10273605
          description: CARD NUMBER-Number that is embossed on the plastic card. Enter
            a value inthis field only if the card number is different from the post-toaccount
            number
          format: uppercase
       
    CardsBlockUnblockResp:
      required:
      - businessUnit
      - cardNumber
      - cardSequence
      - postToAccountNumber
      type: object
      properties:
        businessUnit:
          type: number
          example: 100
          description: Business Unit -Identification number of the organization associated
            with thisAccount Base Segment record. The values are 001–998.
        cardholderType:
          example: '1'
          type: string
          description: Card holder type-'Code that indicates whether the cardholder
            is the primarycardholder or an additional cardholder associated with theaccount.
            The value for this field is set in the card-adding processwith the first
            cardholder designated as the primary cardholderand the other cardholders
            as additional cardholders, values are 0=Additional cardholder, 1=Primary
            cardholder
          enum:
          - 1 - Primary
          - 0 - Additional
        blockCode:
          type: string
          example: 'E'
          description: Block code-The block code assigned to the Embosser record,
            Blcok code values can be be A- Z or SPACES
          enum:
          - X
          - E
          - F
          - G
          - ' '
        blockDate:
          type: string
          example: 00/00/0000
          description: Card block date-The date on which card is blocked
          format: uppercase
        cardSequence:
          type: number
          example: 0001
          description: Card sequence- This a static value value 0001 should be passed
        postToAccountNumber:
          maxLength: 19
          type: string
          example: ABCDEFGHIJABCDEFGHI
          description: Post to account number-Identification number of the Account
            Base Segment record towhich CMS posts transactions received for this Embosser
            record
          format: uppercase
        cardNumber:
          maxLength: 19
          type: string
          example: 00098468CCCCC273605
          description: CARD NUMBER-Number that is embossed on the plastic card. Enter
            a value inthis field only if the card number is different from the post-toaccount
            number
          format: uppercase
        warningCode1:
          type: string
          example: '0'
          description: Warning Code1 -This field determine whether to authorize or
            decline authorizations for this Embosser record (card), These are display
            fieldscannot change the values The values are 0 =Normal authorizations
            (Default), 1=Decline, 2=Decline and pick up,3=Decline and pick up for
            fraud or lost/stolencard,4=Decline with referral,5=Approve after verifying
            cardholder ID,6=Decline for suspected fraud,8=Decline with a user exit,9=VIP
            account; always approve
          enum:
          - 0 - No Action
          - ' '
          - 1 - Decline Auth
          - 2 - Decline Pickup
          - 3 - Decline Fraud
          - 4 - Decline Refer
          - 6 - Decline Susp Fraud
          - 8 - Decline User Exit 
          - 9 - Approve Tip
    UpdateCardLimitReq:
      required:
      - businessUnit
      - cardNumber
      - cardSequence
      - postToAccountNumber
      type: object
      properties:
        businessUnit:
          type: number
          example: 100
          description: Business Unit -Identification number of the organization associated
            with thisAccount Base Segment record. The values are 001–998.
        cardSequence:
          type: number
          example: 0001
          description: Card sequence- This a static value value 0001 should be passed
        postToAccountNumber:
          maxLength: 19
          type: string
          example: ' '
          description: Post to account number-Identification number of the Account
            Base Segment record towhich CMS posts transactions received for this Embosser
            record
          format: uppercase
        cardNumber:
          maxLength: 19
          type: string
          example: '000984680CCCCC73605'
          description: CARD NUMBER-Number that is embossed on the plastic card. Enter a value inthis field only if the card number is different from the post-toaccount number
          format: uppercase
        maximumAuthorizationsFrequnecy:
          type: string
          example: '1'
          description: Maximum authorization frequency-Code that indicates the frequency for the maximumauthorization parameters The values are 0=Not used,1=Daily,2=Cycle-to-date,3=Year-to-date
          enum:
          - 0 - Frequency Not Used
          - 1 - Daily Frequency
          - 2 - Cycle To Date Frequency
          - 3 - Year To Date Frequency
        maximumAmountATMCashAuthorizationsAllowed:
          type: string
          example: '10000'
          description: Maximum amount ATM cash authorization-Maximum amount in monetary units and subunits of ATM cashauthorizations allowed for this Embosser record for thefrequency defined in the FREQ field
          default: 0.0
        maximumNumberATMCashAuthorizationsAllowed:
          type: number
          example: 1
          description: Maximum number ATM cash authorization-Maximum number of ATM cash authorizations allowed for thisEmbosser record for the frequency defined in the FREQ field
        maximumAmountSingleATMTransactionAllowed:
          type: string
          example: 10000
          description: Maximum amount SINGLE ATM Transaction-Maximum authorization amount in monetary units and subunitsof a single ATM transaction allowed for this Embosser recordfor the frequency defined in the FREQ field
          default: 0.0
        maximumNumberOTCAuthorizationsAllowed:
          type: number
          example: 1
          description: Maximum number OTC  authorization-Maximum number of OTC authorizations
            allowed for thisEmbosser record for the frequency defined in the FREQ
            field
        maximumAmountOTCCashAuthorizationsAllowed:
          type: string
          example: 2000
          description: Maximum amount OTC cash authorization-Maximum amount in monetary units and subunits of OTC cashauthorizations allowed for this Embosser record for thefrequency defined in the FREQ field
        singleOTCCashAuthorizationAllowed:
          type: string
          example: 10000
          description: Maximum Amount Single OTC cash authorization allowed-Maximum amount in monetary units and subunits of OTCauthorizations allowed for this Embosser record for thefrequency defined in the FREQ field
          default: 0.0
        maximumAmountRetailAuthorizationsAllowed:
          type: string
          example: 1000
          description: Maximum amount retail authorization-Maximum amount in monetary units and subunits of retailauthorizations allowed for this Embosser record for thefrequency defined in the FREQ field
          default: 0.0
        maximumNumberRetailAuthorizationsAllowed:
          type: number
          example: 1
          description: Maximum number retail authorization-Maximum number of retail authorizations allowed for thisEmbosser record for the frequency defined in the FREQ field
        singleRetailAuthorizationAllowed:
          type: string
          example: '0000'
          description: Maximum Amount Single retail authorization allowed- Maximum amount in monetary units and subunits of OTCauthorizations allowed for 'this Embosser record for thefrequency defined in the FREQ field.
          default: 0.0
          
    UpdateCardLimitResp:
      required:
      - businessUnit
      - cardNumber
      - cardSequence
      - postToAccountNumber
      type: object
      properties:
        businessUnit:
          type: number
          example: 100
          description: Business Unit -Identification number of the organization associated with thisAccount Base Segment record. The values are 001–998.
        cardSequence:
          type: number
          description: Card sequence- This a static value value 0001 should be passed
        maximumNumberRetailAuthorizationsAllowed:
          type: number
          example: 1
          description: Maximum number retail authorization-Maximum number of retail authorizations allowed for thisEmbosser record for the frequency defined in the FREQ field
        maximumAmountSingleATMTransactionAllowed:
          type: string
          example: '1000'
          description: Maximum amount SINGLE ATM Transaction-Maximum authorization amount in monetary units and subunitsof a single ATM transaction allowed for this Embosser recordfor the frequency defined in the FREQ field
          default: 0.0
        singleOTCCashAuthorizationAllowed:
          type: string
          example: '100'
          description: Maximum Amount Single OTC cash authorization allowed-Maximum amount in monetary units and subunits of OTCauthorizations allowed for this Embosser record for thefrequency defined in the FREQ field
          default: 0.0
        postToAccountNumber:
          maxLength: 19
          type: string
          example: '0001000CCCCCC510760'
          description: Post to account number-Identification number of the Account Base Segment record towhich CMS posts transactions received for this Embosser record
          format: uppercase
        maximumAmountATMCashAuthorizationsAllowed:
          type: string
          example: '100'
          description: Maximum amount ATM cash authorization-Maximum amount in monetary units and subunits of ATM cashauthorizations allowed for this Embosser record for thefrequency defined in the FREQ field
          default: 0.0
        maximumNumberOTCAuthorizationsAllowed:
          type: number
          example: 1
          description: Maximum number OTC  authorization-Maximum number of OTC authorizations
            allowed for thisEmbosser record for the frequency defined in the FREQ
            field
        maximumNumberATMCashAuthorizationsAllowed:
          type: number
          example: 1
          description: Maximum number ATM cash authorization-Maximum number of ATM cash authorizations allowed for thisEmbosser record for the frequency defined in the FREQ field
        singleRetailAuthorizationAllowed:
          type: string
          example: '0'
          description: Maximum Amount Single retail authorization allowed- Maximum amount in monetary units and subunits of OTCauthorizations allowed for 'this Embosser record for thefrequency defined in the FREQ field.
          default: 0.0
        maximumAmountRetailAuthorizationsAllowed:
          type: string
          example: '1000'
          description: Maximum amount retail authorization-Maximum amount in monetary units and subunits of retailauthorizations allowed for this Embosser record for thefrequency defined in the FREQ field
          default: 0.0
        maximumAuthorizationsFrequnecy:
          type: string
          example: '1'
          description: Maximum authorization frequency-Code that indicates the frequency for the maximumauthorization parameters The values are 0=Not used,1=Daily,2=Cycle-to-date,3=Year-to-date
          enum:
          - 0 - Frequency Not Used
          - 1 - Daily Frequency
          - 2 - Cycle To Date Frequency
          - 3 - Year To Date Frequency
        maximumAmountOTCCashAuthorizationsAllowed:
          type: string
          example: '2000'
          description: Maximum amount OTC cash authorization-Maximum amount in monetary units and subunits of OTC cashauthorizations allowed for this Embosser record for thefrequency defined in the FREQ field
        cardNumber:
          maxLength: 19
          type: string
          example: '00098468CCCCC273605'
          format: uppercase
          description: CARD NUMBER-Number that is embossed on the plastic card. Enter a value inthis field only if the card number is different from the post-toaccount number
    
  examples:
    CardActivateReq:
      value: { businessUnit: 100, cardNumber: '0009846801010273613', cardSequence: 0001, currentCardRequireActivation: 'N', postToAccountNumber: ' ', lastCardActivation: 'N'}
    CardActivateResp:
      value: {businessUnit: 100, cardNumber: 0009846801010273613,
        cardSequence: 1, lastCardActivation: N, currentCardRequireActivation: N, cardActivatedDate: 01/10/2021, postToAccountNumber: 0001000010000510760}
      
    BlockCardReq:
      value: { businessUnit: 100, cardNumber: '0009846801010273605',
              cardSequence: 0001, blockCode: 'X' }
    BlockCardResp:
      value: {businessUnit: 100,cardNumber: '0009846801010273605', cardSequence: 1, postToAccountNumber: '0001000010000510760', blockCode: 'X', blockDate: 01/10/2021, warningCode1: '1', cardholderType: '1'}
    CardTransferReq:
      value: { businessUnit: 100, cardNumber: '0009846801010001264',
          cardSequenceNumber: 0001, accountNumber: '0001000010000003777',
          action: T, effectiveDate: ' ' , cardReplacementIndicator: '1',
          blockCode: L }
    CardTransferResp:
      value: {serviceReturnCode: P, numberOfErrors: 0, maskCardnumber: '000404940XXXXXX4481', cardNumber: '0009846801010000089', effectiveDate: '10/01/2021', transferFromAccount: '0001000010000003777', blockCode: L}
    
    CardSecureReq:
      value: {businessUnit: 100, cardNumber: '0009846801010065787',cVV2: '855',expiryDateMMYY: '1123'}
    CardSecureResp:
      value: {cardNumber: '0009846801010065787'}  
    CardProfileReq: 
      value: {businessUnit: 100, cardNumber: '0009846801010273613', cardSequence: 0001, cardholderType: 1}
    CardsProfileResp:
      value: { businessUnit: 100, cardNumber: '0009846801010273613', cardSequence: 1, postToAccountNumber: '0001000010000510760', cardholderType: 1 }
    CardClearResp:
      value: { cardNumber: '0004049400000274818' }
    
    CardPinReq: 
      value: { businessUnit: 200,cardNumber: '0009543491000080172',currentPinBlock: 'A8EFRS432RTODS2R',requestedPinBlock: '6BA8F5DFB742A878',pinChannel: 'W', pinOffset: ' ' }
    CardPinResp: 
      value: { cardNumber: '0009543491000080172', userFiller: '',
               filler: '' }
    CardLimitReq:
      value: { businessUnit: 100, cardNumber: '0009846801010273605', cardSequence: 0001, maximumAuthorizationsFrequency: '1', maximumAmountSingleATMTransactionAllowed: '10000', maximumAmountATMCashAuthorizationsAllowed: '10000', maximumNumberATMCashAuthorizationsAllowed: 1,  singleOTCCashAuthorizationAllowed: '10000', maximumNumberOTCAuthorizationsAllowed: 1, maximumAmountOTCCashAuthorizationsAllowed: '20000',  singleRetailAuthorizationAllowed: '00000', maximumNumberRetailAuthorizationsAllowed: 1,  maximumAmountRetailAuthorizationsAllowed: '10000'   }
    CardLimitResp:
      value: { businessUnit: 100, cardNumber: '0009846801010273605', cardSequence: 1, maximumNumberRetailAuthorizationsAllowed: 1, maximumAmountSingleATMTransactionAllowed: '$100.00', singleOTCCashAuthorizationAllowed: '$100.00', maximumAmountATMCashAuthorizationsAllowed: '$100.00', postToAccountNumber: '0001000010000510760', maximumNumberOTCAuthorizationsAllowed: 1, maximumNumberATMCashAuthorizationsAllowed: 1, singleRetailAuthorizationAllowed: '$0.00', maximumAmountRetailAuthorizationsAllowed: '$100.00', maximumAuthorizationsFrequnecy: 1, maximumAmountOTCCashAuthorizationsAllowed: '$200.00' }
             
    400-Errors:
      value:
        erorrCode: XXXXXXXX
        errorMessage: Some message from the service
    401-Errors:
      value:
        erorrCode: XXXXXXXX
        errorMessage: Some message from the service
    404-Errors:
      value:
        erorrCode: XXXXXXXX
        errorMessage: Some message from the service
    500-Errors:
      value:
        erorrCode: XXXXXXXX
        errorMessage: Some message from the service
    503-Errors:
      value:
        erorrCode: XXXXXXXX
        errorMessage: Some message from the service
    504-Errors:
      value:
        erorrCode: XXXXXXXX
        errorMessage: Some message from the service
